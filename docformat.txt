File
/**
 * @author Travis Martin
 * @copyright Travis Martin 2020
 * @file Description.
 * @license APGL-3.0-or-later
 */

Class
/**
 * @augments ParentClass
 * @class {type} name
 * @classdesc Description.
 * @ignore [remove tag if member should be documented.]
 * @memberof Namespace [delete if not in a namespace.]
 * @namespace [delete if nothing contained needs to be documented.]
 * @readonly [remove if user should change.]
 * @see Text. [copy for each reference.]
 * @since 1.0
 * @summary Description. [remove if description is already short.]
 */

Member
/**
 * @constant {type} name [remove if not constant.]
 * @default [value if assigned value is not a string, number, boolean, or null. Don't include tag if no default exists (undefined).]
 * @description Description.
 * @ignore [remove tag if member should be documented.]
 * @member {type} name
 * @memberof Namespace [delete if not in a namespace.]
 * @override [delete if doesn't override a property of the parent.]
 * @readonly [remove if user should change.]
 * @see Text. [copy for each reference.]
 * @since 1.0
 * @static [remove if not static.]
 * @summary Description. [remove if description is already short.]
 */

Function
/**
 * @callback Namespace~callbackName [remove if not callback.]
 * @constructs [name not necessary if immediately following the class that it constructs. remove if not constructor.]
 * @description Description.
 * @example Example.
 * @function Name
 * @ignore [remove tag if member should be documented.]
 * @memberof Namespace [delete if not in a namespace.]
 * @namespace Name [delete if nothing contained needs to be documented. name not recommended.]
 * @override [delete if doesn't override a property of the parent.]
 * @param {type} name - Description. [copy for each parameter.]
 * @readonly [remove if user should change.]
 * @returns {type} Description. [remove if doesn't return a value.]
 * @see Text. [copy for each reference.]
 * @since 1.0
 * @static [remove if not static.]
 * @summary Description. [remove if description is already short.]
 */